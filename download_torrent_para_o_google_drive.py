# -*- coding: utf-8 -*-
"""Download Torrent para o Google Drive

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/15ZTlwGWkoZSrj5BnJO-syFSGG6y1WhSi

# Download Torrent para o Google Drive
"""



"""**Nota importante:** Vá para Runtime de execução -> Alterar Runtime de execução e forneça a GPU como o acelerador de hardware. Você terá cerca de 384GB para baixar qualquer torrent que desejar.

### Instale a libtorrent e Inicialize a Sessão
"""

!apt install python3-libtorrent

import libtorrent as lt

ses = lt.session()
ses.listen_on(6881, 6891)
downloads = []

"""### Monte o Google Drive
Para transmitir arquivos, precisamos montar o Google Drive.
"""

from google.colab import drive

drive.mount("/content/drive")

"""### Adicionar do arquivo Torrent
Você pode executar esta célula para adicionar mais arquivos quantas vezes quiser
"""

from google.colab import files

source = files.upload()
params = {
    "save_path": "/content/drive/My Drive/Torrent",
    "ti": lt.torrent_info(list(source.keys())[0]),
}
downloads.append(ses.add_torrent(params))

"""### Adicionar Link Magnético"""

params = {"save_path": "/content/drive/My Drive/Torrent"}

while True:
    magnet_link = input("Digite o link magnético ou digite Exit: ")
    if magnet_link.lower() == "exit":
        break
    downloads.append(
        lt.add_magnet_uri(ses, magnet_link, params)
    )

"""### Iniciar Download
Source: https://stackoverflow.com/a/5494823/7957705 and [#3 issue](https://github.com/FKLC/Torrent-To-Google-Drive-Downloader/issues/3) which refers to this [stackoverflow question](https://stackoverflow.com/a/6053350/7957705)
"""

import time
from IPython.display import display
import ipywidgets as widgets

state_str = [
    "queued",
    "checking",
    "downloading metadata",
    "downloading",
    "finished",
    "seeding",
    "allocating",
    "checking fastresume",
]

layout = widgets.Layout(width="auto")
style = {"description_width": "initial"}
download_bars = [
    widgets.FloatSlider(
        step=0.01, disabled=True, layout=layout, style=style
    )
    for _ in downloads
]
display(*download_bars)

while downloads:
    next_shift = 0
    for index, download in enumerate(downloads[:]):
        bar = download_bars[index + next_shift]
        if not download.is_seed():
            s = download.status()

            bar.description = " ".join(
                [
                    download.name(),
                    str(s.download_rate / 1000),
                    "kB/s",
                    state_str[s.state],
                ]
            )
            bar.value = s.progress * 100
        else:
            next_shift -= 1
            ses.remove_torrent(download)
            downloads.remove(download)
            bar.close() # Seems to be not working in Colab (see https://github.com/googlecolab/colabtools/issues/726#issue-486731758)
            download_bars.remove(bar)
            print(download.name(), "completo")
    time.sleep(1)